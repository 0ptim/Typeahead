@page "/"

<h1>Blazored Typeahead - Form</h1>

<EditForm Model="@FormModel" OnValidSubmit="@HandleFormSubmit">
    <DataAnnotationsValidator />

    <BlazoredTypeaheadInput SearchMethod="@GetPeopleLocal"
                            @bind-Value="@FormModel.SelectedPerson"
                            Placeholder="Search by first name...">
        <SelectedTemplate Context="person">
            @person.Firstname
        </SelectedTemplate>
        <ResultTemplate Context="person">
            @person.Firstname @person.Lastname
        </ResultTemplate>
    </BlazoredTypeaheadInput>
    <ValidationMessage For="@(() => FormModel.SelectedPerson)" />

    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<hr />

@if (FormModel.SelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @FormModel.SelectedPerson.Firstname @FormModel.SelectedPerson.Lastname</p>
}

<hr />

<h1>Blazored Typeahead - Standalone</h1>


<BlazoredTypeahead SearchMethod="@GetPeopleLocal"
                   @bind-Value="@SelectedPerson"
                   Placeholder="Search by first name...">
    <SelectedTemplate Context="person">
        @person.Firstname
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname
    </ResultTemplate>
</BlazoredTypeahead>

<hr />

@if (SelectedPerson != null)
{
    <p>Selected: @SelectedPerson.Firstname @SelectedPerson.Lastname</p>
}


@code {

    private List<Person> People = new List<Person>();

    private Person SelectedPerson;
    private FormExample FormModel = new FormExample();

    protected override void OnInit()
    {
        var person1 = new Person { Firstname = "John", Lastname = "Smith" };
        var person2 = new Person { Firstname = "Jane", Lastname = "Doe" };
        var person3 = new Person { Firstname = "Tom", Lastname = "Jones" };
        var person4 = new Person { Firstname = "Fred", Lastname = "Gouch" };
        var person5 = new Person { Firstname = "John", Lastname = "Philips" };
        var person6 = new Person { Firstname = "Jon", Lastname = "Thomas" };

        People.Add(person1);
        People.Add(person2);
        People.Add(person3);
        People.Add(person4);
        People.Add(person5);
        People.Add(person6);
    }

    private async Task<List<Person>> GetPeopleLocal(string searchText)
    {
        return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private void HandleFormSubmit()
    {
        Console.WriteLine("Form Submitted Successfully!");
    }

}
