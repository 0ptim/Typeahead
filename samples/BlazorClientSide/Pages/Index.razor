@page "/"
@inject  HttpClient httpClient

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<h1>Local Data Sample</h1>

<BlazoredTypeahead Data="@GetPeopleLocal"
                   bind-Item="@SelectedPerson"
                   Placeholder="Search by first name..."
                   MinimumLength="3">
    <SelectedTemplate>
        @context.Firstname
    </SelectedTemplate>
    <ResultTemplate>
        @context.Firstname @context.Lastname
    </ResultTemplate>
</BlazoredTypeahead>

@if (SelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @SelectedPerson.Firstname @SelectedPerson.Lastname</p>
}

<hr />
<h1>Remote Data Sample</h1>
<BlazoredTypeahead Data="@GetPeopleRemote"
                   bind-Item="@RemoteSelectedPerson"
                   Placeholder="Search by name..."
                   MinimumLength="3">
    <SelectedTemplate>
        @context.Firstname @context.Lastname
    </SelectedTemplate>
    <ResultTemplate>
        @context.Firstname @context.Lastname <br />
        @context.Location (Age: @context.Age)
    </ResultTemplate>
</BlazoredTypeahead>

@if (RemoteSelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @RemoteSelectedPerson.Firstname @RemoteSelectedPerson.Lastname</p>
}

<hr />
<h1>Pre-selected Data Sample</h1>

<BlazoredTypeahead Data="@GetPeopleLocal"
                   bind-Item="@PreSelectedPerson"
                   Placeholder="Search by first name..."
                   Debounce="1000">
    <SelectedTemplate>
        @context.Firstname
    </SelectedTemplate>
    <ResultTemplate>
        @context.Firstname @context.Lastname
    </ResultTemplate>
</BlazoredTypeahead>

@if (PreSelectedPerson != null)
{
    <br />
    <p><strong>Selected Person:</strong> @PreSelectedPerson.Firstname @PreSelectedPerson.Lastname</p>
}

@functions {

    private List<Person> People = new List<Person>();

    private Person SelectedPerson;
    private Person RemoteSelectedPerson;
    private Person PreSelectedPerson;

    protected override void OnInit()
    {
        var person1 = new Person { Firstname = "John", Lastname = "Smith" };
        var person2 = new Person { Firstname = "Jane", Lastname = "Doe" };
        var person3 = new Person { Firstname = "Tom", Lastname = "Jones" };
        var person4 = new Person { Firstname = "Fred", Lastname = "Gouch" };
        var person5 = new Person { Firstname = "John", Lastname = "Philips" };
        var person6 = new Person { Firstname = "Jon", Lastname = "Thomas" };

        People.Add(person1);
        People.Add(person2);
        People.Add(person3);
        People.Add(person4);
        People.Add(person5);
        People.Add(person6);

        PreSelectedPerson = person5;
    }

    private async Task<List<Person>> GetPeopleLocal(string searchText)
    {
        return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<List<Person>> GetPeopleRemote(string searchText)
    {
        var result = await httpClient.GetJsonAsync<List<Person>>($"https://localhost:44376/api/persons/?name={searchText}");

        return result;
    }

}
